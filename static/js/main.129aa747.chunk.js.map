{"version":3,"sources":["logo.svg","components/Display.js","components/Button.js","components/ButtonPanel.js","logic/operate.js","logic/calculate.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Display","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","result","React","Component","Button","buttonStyle","backgroundColor","color","width","wide","style","onClick","name","ButtonPanel","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","group1","group2","group3","group4","group5","orange","_this2","renderButton","button","Button_Button","includes","map","btn","Big","require","operate","numberOne","numberTwo","operation","x","y","total","mod","minus","times","div","plus","toString","toExponential","calculate","data","next","parseFloat","App","state","handleClick","bind","assertThisInitialized","buttonName","setState","src","logo","alt","Display_Display","show","ButtonPanel_ButtonPanel","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.129aa747.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport '../css/Display.css';\n\nexport class Display extends React.Component {\n  render() {\n    return (\n      <div className='Display'>\n        <p>{this.props.result}</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Button.css';\n\nexport class Button extends React.Component {\n\n  render() {\n    const buttonStyle = {\n      backgroundColor: this.props.color,\n      width: this.props.wide ? '50%' : '25%'\n    };\n\n    return (\n      <button style = { buttonStyle } onClick = { this.props.onClick }>\n        { this.props.name }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  wide: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/ButtonPanel.css';\nimport { Button } from './Button';\n\nexport class ButtonPanel extends React.Component {\n  group1 = ['AC', '+/-', '%', 'รท'];\n  group2 = ['7', '8', '9', 'X'];\n  group3 = ['4', '5', '6', '-'];\n  group4 = ['1', '2', '3', '+'];\n  group5 = ['0', '.', '='];\n  orange = ['รท','X','-','+','='];\n  wide = ['0'];\n\n  render() {\n\n    const renderButton = (button) => <Button key = { button } name = { button } color = { this.orange.includes(button) ? 'orange' : 'lightGray'} wide = { this.wide.includes(button) ? true : false } onClick = { () => this.props.onClick(button) } />;\n\n    return (\n      <div className='ButtonPanel'>\n        <div className='ButtonRow'>\n          { this.group1.map( btn => renderButton(btn) ) }\n        </div>\n        <div className='ButtonRow'>\n          { this.group2.map( btn => renderButton(btn) ) }\n        </div>\n        <div className='ButtonRow'>\n          { this.group3.map( btn => renderButton(btn) ) }\n        </div>\n        <div className='ButtonRow'>\n          { this.group4.map( btn => renderButton(btn) ) }\n        </div>\n        <div className='ButtonRow'>\n          { this.group5.map( btn => renderButton(btn) ) }\n        </div>\n      </div>\n    )\n  }\n}\n\nButtonPanel.propTypes = {\n  onClick: PropTypes.func.isRequired\n};\n","let Big = require('big.js');\n\nconst operate = (numberOne, numberTwo, operation) => {\n  let x = Big(numberOne);\n  let y = Big(numberTwo);\n  let total = null;\n\n  switch (operation) {\n    case '%':\n      total = x.mod(y);\n      break;\n    case '-':\n      total = x.minus(y);\n      break;\n    case 'X':\n      total = x.times(y);\n      break;\n    case 'รท':\n      if(numberTwo === '0') {\n        total = 'undefined';\n      } else {\n        total = x.div(y);\n      }\n      break;\n    default:\n      total = x.plus(y);\n      break;\n  }\n\n  if(total.toString().length > 10) {\n    return total.toExponential(6).toString();\n  } else {\n    return total.toString();\n  }\n}\n\nexport default operate;\n","import operate from './operate';\n\nconst calculate = (data, button) => {\n  switch (button) {\n\n    case 'AC':\n      data.total = '';\n      data.next = '';\n      break;\n\n    case '+/-':\n      if (data.next !== '') {\n        data.next = (parseFloat(data.next) * -1).toString();\n      } else if (data.total !== '') {\n        data.total = (parseFloat(data.total) * -1).toString();\n      }\n      break;\n\n    case '%':\n    case 'รท':\n    case 'X':\n    case '-':\n    case '+':\n      if(data.total !== '' && data.total !== 'undefined' && data.next !== '') {\n        data.total = operate(data.total, data.next, data.operation);\n        data.operation = button;\n      } else if((data.total === '' || data.total === 'undefined') && data.next !== '') {\n        data.operation = button;\n        data.total = data.next;\n      }\n      data.next = '';\n      break;\n\n    case '=':\n      if(data.total !== '' && data.total !== 'undefined' && data.next !== '') {\n        data.total = operate(data.total, data.next, data.operation);\n        data.next = '';\n      }\n      break;\n\n    case '.':\n      if (!data.next.includes(button)) data.next += button;\n      break;\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n    case '0':\n      if(data.next.length < 12) {\n        data.next += button;\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return data;\n}\n\nexport default calculate;\n","import React from 'react';\nimport logo from '../logo.svg';\nimport '../css/App.css';\nimport { Display } from './Display';\nimport { ButtonPanel } from './ButtonPanel';\nimport calculate from '../logic/calculate';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { total: '', next: '', operation: '' };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(buttonName) {\n    let data = calculate(this.state, buttonName);\n    this.setState({\n      total: data.total,\n      next: data.next,\n      operation: data.operation\n    });\n  }\n\n  show() {\n    if(this.state.next) {\n      return this.state.next;\n    } else if(this.state.total) {\n      return this.state.total;\n    } else {\n      return '0';\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"Calculator\">\n          <Display result = { this.show() } />\n          <ButtonPanel onClick = { this.handleClick } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}